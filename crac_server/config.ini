# le impostazioni di setup per pin GPIO che utilizzano interruttori, devono essere: GPIO.setup(pin, GPIO.IN, pull_up_down=GPIO.PUD_UP)
# dove pin rappresenta il numero del pin nel formato scelto per il setup del GPIO, BOARD O BMC,
# GPIO.IN imposta il pin per un segnale di ingresso
# pull_up_down=GPIO.PUD_UP definiscono lo stato del pin fintanto che non viene premuto l'interruttore. in questo caso alto
# che diventa basso quando premendo l'interruttore il pin in questione vine messo a massa.

[server]
port = 50051
loopback_ip = [::]
gpio_mock = on

[geography]
# latitudine geografica del luogo di osservazione
lat = 42d13.76m
# longitudine geografica del luogo di osservazione
lon = +12d48.69m
# altezza slm
height = 465
#equinozio
equinox = J2000

[telescope]
# one of simulator, indi, theskyx, ascom_hub
driver = simulator
# hostname/ip address where the telescope server is running
hostname = 
# port where the server is listening
# theskyx 3040
# indi 7624
# ascom_hub 11111
port =
# max secure telescope altitude for closing the roof
max_secure_alt = 10
# telescope altitude for parking
park_alt = 0.2
# telescope azimuth for parking
park_az = 0.1
# telescope altitude for flat
flat_alt = 0.5
# telescope azimuth for flat
flat_az = 2
# can put the telescope in tracking off mode (TelescopeSpeed.SPEED_NOT_TRACKING)
tracking_off = true
# interval between polling
polling_interval = 1.0

[indi]
# name of telescope
# default Telescope Simulator
# frasso Astro-Electronic FS-2
# frasso LX200 Classic
name = Telescope Simulator

[ascom_hub]
# device number of the telescope 
# as it is configured on the 
# ascom remote server
device_number = 0

[motor_board]
# setup con GPIO.BMC i numeri rappresentano il numero del pin
# pin 31 per segnale motore tenda est
motorE_A = 26
# pin 33 per segnale motore tenda est
motorE_B = 13
# pin 29 per enable motore tenda est
motorE_E = 19

# pin 38 per segnale motore tenda ovest
motorW_A = 20
# pin 40 per segnale motore tenda ovest
motorW_B = 21
# pin 36 per enable motore tenda ovest
motorW_E = 16

# corsa e passo_cinghia, queste due chiavi sono state previste qual'ora si utilizzasse un particolare harware per gli encoder
# corsa del braccio traente espressa in mm
corsa = 700
# passo della cinghia dentata di movimentazione encoder
passo_cinghia = 6

[encoder_board]
# setup con GPIO.BMC i numeri rappresentano il numero del pin on board
# pin 18 per clock encoder tenda est
clk_e = 18
# pin 23 per dt encoder teda est
dt_e = 23
# pin 24 per clock encoder tenda ovest
clk_w = 24
# pin 25 per dt encoder tenda ovest
dt_w= 25

[roof_board]
# setup con GPIO.BMC
# Pin 11 per tetto chiuso-- VERIFICARE LO STATO DELL'INTERRUTTORE RISPETTO AL VALORE IMPOSTATO
roof_verify_closed = 17
# Pin 7 per tetto aperto -- VERIFICARE LO STATO DELL'INTERRUTTORE RISPETTO AL VALORE IMPOSTATO
roof_verify_open = 4
# pin 13 per comando apertura/chiusura tetto -- IN OPEN E CLOSED IL PIN Ãˆ LO STESSO, CAMBIA IL VALORE DA HIGH A LOW IN ROOF_CONTROL
switch_roof = 27
# timeout before sending an error for blocked roof
roof_timeout = 50

[encoder_step]
n_step_sub_min = -10
# n step totali per escursione completa tenda
n_step_corsa = 205
# potrebbe essere necessario per motori non dotati di fine corsa
n_step_sicurezza =  215
# tolleranza del numero di step rispetto a quelli attesi
tolerance_steps = 10

[azimut]
#rappresentano i valori massimi di altezza e azimut delle tende rilevati ai quattro angoli.
azNE = 20
azSE = 160
azSW = 190
azNW = 340

[tende]
#altezza massima delle tende in valore di alt
max_est = 70
max_west = 70
# altezza minima per tende chiuse in valore di alt
park_est = 0
park_west = 0
# angolazione montaggio tende
alpha_min = -12

[curtains_limit_switch]
# controlli per ora non inseriti nel codice, ma che potrebbero essere necessari o opportuni
# in particolare queste chiavi fanno un check sullo stato dei fine corsa della tenda in apertura e in chiusura.
# setup con GPIO.BMC
# pin 35 per finecorsa tenda_W aperta
curtain_W_verify_open = 5
# pin 37 per finecorsa tenda_W chiusa
curtain_W_verify_closed= 6
# pin 15 per finecorsa tenda_E aperta
curtain_E_verify_open = 22
# pin 32 per finecorsa tenda_E chiusa
curtain_E_verify_closed = 12

[panel_board]
# controllo accensione pannello flat
# setup con GPIO.BMC
switch_panel = 10
switch_power = 9
switch_light = 11
switch_aux = 8

[weather]
url = http://fits.ara.roma.it/Immagini/meteo/current.json
fallback_url = https://ara.roma.it/meteo/current.json
time_format = %%Y-%%m-%%d %%H:%%M:%%S
time_expired = 660

[temperature]
warning = 35
upper_bound = 40
lower_bound = -10

[wind_speed]
lower_bound = 0
warning = 4
error = 6
upper_bound = 30

[wind_gust_speed]
lower_bound = 0
warning = 4
error = 6
upper_bound = 30

[humidity]
lower_bound = 0
warning = 85
error = 90
upper_bound = 100

[rain_rate]
lower_bound = 0
warning = 1
error = 2
upper_bound = 10

[barometer]
lower_bound = 980
error = 1000
warning = 1013
upper_bound = 1045

[barometer_trend]
lower_bound = -10
error = -5
warning = -3
upper_bound = 10
